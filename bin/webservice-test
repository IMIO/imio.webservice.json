#!/bin/bash
# $1: scan type (optional, default:0) (supported types: 0 incomingmail, 1 outgoingmail, 2 gen outgoingmail, 3 meetingitem)
# $2: number of generated elements (optional, default:1)
# $3: external_id counter (optional, default: random)
# $4: 'update' (optional, default: nothing)
# $5: filename (optional, default: README.rst)

AUTH="testuser:test"
DOMAIN="http://0.0.0.0:6543"
SCAN_TYPE="0"
SCAN_TYPES="0 1 2 3 Y"
CLIENT="0109999"

# RANDOM produces a number between 0 - 32767
RD1=$(($RANDOM/4+1))
RD2=$(($RANDOM/4+1))
NB=$(($RD1*$RD2+30000000))
SIMUL=0
FILENAME="README.rst"
FILEMD5="23aebcae4ee8f5134da4fa5523abd3dd"

if [ "$5" != "" ]
then
    FILENAME=$5
    FILEMD5=`md5sum $FILENAME | awk '{print $1;}'`
fi

FILESIZE=`ls -al $FILENAME | awk '{print $5}'`
VERSION="1.2"

if [ "$1" != "" ]
then
    SCAN_TYPE=$1
fi

if [[ $SCAN_TYPES =~ $SCAN_TYPE ]]
then
    CLIENT="${CLIENT:0:2}$SCAN_TYPE${CLIENT:3}"
    echo $CLIENT
else
    echo "The first parameter must be in the list $SCAN_TYPES"
    exit
fi

COUR_E="
{
    \"external_id\": \"IMIO$CLIENT\",
    \"type\": \"COUR_E\",
    \"pages_number\": 1,
    \"client_id\": \"$CLIENT\",
    \"scan_date\": \"2014-11-20\",
    \"scan_hour\": \"15:00:00\",
    \"user\": \"testuser\",
    \"pc\": \"pc-scan01\",
    \"creator\": \"scanner\",
    \"filesize\": $FILESIZE,
    \"filename\": \"$FILENAME\",
    \"filemd5\": \"$FILEMD5\"
}
"
echo $FILESIZE
echo $COUR_E

if [ "$3" != "" ]
then
    NB=$3
fi
if [ "$4" == "update" ]
then
    COUR_E=${COUR_E/\}/,    \"update\": true\}}
fi
# sending metadata
for i in `seq 1 $2`;
do
    echo "Push element $i"
    NBi=`printf "%08d" $NB`
    COUR_Ei=${COUR_E/IMIO$CLIENT/$CLIENT$NBi}
    ((NB++))
    if [ "$SIMUL" -eq "1" ];
    then
        echo "curl -u $AUTH -X POST -H \"Content-Type: application/json\" -d \"$COUR_Ei\" $DOMAIN/dms_metadata/$CLIENT/$VERSION"
    else
        RET=`curl -u $AUTH -X POST -H "Content-Type: application/json" -d "$COUR_Ei" $DOMAIN/dms_metadata/$CLIENT/$VERSION`
        echo $RET
        ID=`expr "$RET" : '.*"id": \([0-9]*\)'`
    fi
    if [ "$SIMUL" -eq "1" ];
    then
        ID=1
        echo "curl -u $AUTH -i -F filedata=@$FILENAME $DOMAIN/file_upload/$VERSION/$ID"
    elif [ "$ID" != "" ]
    then
        RET=`curl -u $AUTH -i -F filedata=@$FILENAME $DOMAIN/file_upload/$VERSION/$ID`
        echo $RET
    fi
done
