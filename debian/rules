#!/usr/bin/make -f
# -*- makefile -*-

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# This has to be exported to make some magic below work.
export DH_OPTIONS

PACKAGE	  := imio-webservice
CURDIR    := $(shell pwd)
BUILDDIR  := $(CURDIR)/tmp/$(PACKAGE)
DEBIANCORE               := $(CURDIR)/debian/$(PACKAGE)-instance
DEBIANPUBLISHER          := $(CURDIR)/debian/$(PACKAGE)-publisher
DEBIANINVOICEDISPATCHER	 := $(CURDIR)/debian/$(PACKAGE)-invoice-dispatcher
DEBIANINCOMINGDISPATCHER := $(CURDIR)/debian/$(PACKAGE)-incomingmail-dispatcher
INSTALLDIR   := /srv/$(PACKAGE)

distribution := $(shell lsb_release -is)

clean:
	#rm -rf $(BUILDDIR)/
	dh_testdir
	dh_testroot
	rm -rf build
	rm -f build-stamp
	dh_clean

build:
	mkdir -p $(BUILDDIR)
	cp -ap ./bootstrap.py $(BUILDDIR)
	cp -ap ./setup.py $(BUILDDIR)
	cp -ap ./*.txt $(BUILDDIR)
	cp -ap ./*.rst $(BUILDDIR)
	cp -ap ./*.cfg $(BUILDDIR)
	cp -ap ./production.ini $(BUILDDIR)
	cp -apr ./imiowebservicejson $(BUILDDIR)
	cd $(BUILDDIR) && virtualenv-2.7 .
	rm -f $(BUILDDIR)/lib/python2.7/site-packages/easy-install.pth
	rm -rf $(BUILDDIR)/lib/python2.7/site-packages/setuptools*
	mkdir -p $(BUILDDIR)/eggs
	cd $(BUILDDIR) && bin/python bootstrap.py buildout:eggs-directory=$(BUILDDIR)/eggs
	cd $(BUILDDIR) && bin/buildout buildout:eggs-directory=$(BUILDDIR)/eggs
	echo $(DEBIANCORE)
	touch build-stamp

install-base:
	rm -rf $(DEBIANCORE)
	rm -rf $(DEBIANPUBLISHER)
	rm -rf $(DEBIANINVOICEDISPATCHER)
	rm -rf $(DEBIANINCOMINGDISPATCHER)
	dh_testdir
	dh_testroot
	dh_clean -k -s
	dh_installdirs -s
	rm -f ${BUILDDIR}/.mr.developer.cfg
	rm -f ${BUILDDIR}/.installed.cfg
	rm -f ${BUILDDIR}/versions-picked.cfg
	rm -fr ${BUILDDIR}/downloads

install-core:
	mkdir -p $(DEBIANCORE)/${INSTALLDIR}
	find ${BUILDDIR}/bin -type f -exec sed -i s%${BUILDDIR}%${INSTALLDIR}%g {} \;
	cp -ap $(BUILDDIR)/bin $(DEBIANCORE)/${INSTALLDIR}
	cp -ap $(BUILDDIR)/eggs $(DEBIANCORE)/${INSTALLDIR}
	cp -ap $(BUILDDIR)/setup.py $(DEBIANCORE)/${INSTALLDIR}
	cp -ap $(BUILDDIR)/production.ini $(DEBIANCORE)/${INSTALLDIR}
	cp -apr $(BUILDDIR)/imiowebservicejson $(DEBIANCORE)/${INSTALLDIR}
	cp -apr $(BUILDDIR)/lib $(DEBIANCORE)/${INSTALLDIR}
	cp -apr $(BUILDDIR)/include $(DEBIANCORE)/${INSTALLDIR}
	find ${BUILDDIR}/develop-eggs -type f -exec sed -i s%${BUILDDIR}%${INSTALLDIR}%g {} \;
	cp -apr $(BUILDDIR)/develop-eggs $(DEBIANCORE)/${INSTALLDIR}
	cp -apr $(BUILDDIR)/devel $(DEBIANCORE)/${INSTALLDIR}
	cp -apr $(BUILDDIR)/imio.webservice.json.egg-info $(DEBIANCORE)/${INSTALLDIR}
	rm -r $(DEBIANCORE)/${INSTALLDIR}/bin/document_publisher
	rm -r $(DEBIANCORE)/${INSTALLDIR}/bin/invoice_dispatcher
	rm -r $(DEBIANCORE)/${INSTALLDIR}/bin/incomingmail_dispatcher
	for i in $(find $(DEBIANCORE)/${INSTALLDIR}/parts/omelette -type l); do old_link=$(readlink -m $i); new_link=$(echo $old_link | sed  s%${BUILDDIR}/${INSTALLDIR}/); rm $i; ln -f -s $new_link $i; done
	find $(DEBIANCORE)/${INSTALLDIR} -name "*.pyc" -delete;
	find $(DEBIANCORE)/${INSTALLDIR} -name "*.pyo" -delete;

install-publisher:
	mkdir -p $(DEBIANPUBLISHER)/${INSTALLDIR}
	mkdir -p $(DEBIANPUBLISHER)/${INSTALLDIR}/bin
	mkdir -p $(DEBIANPUBLISHER)/${INSTALLDIR}/var/log
	sed -i s%${BUILDDIR}%${INSTALLDIR}%g ${BUILDDIR}/bin/document_publisher
	cp -ap $(BUILDDIR)/bin/document_publisher $(DEBIANPUBLISHER)/${INSTALLDIR}/bin

install-invoice-dispatcher:
	mkdir -p $(DEBIANINVOICEDISPATCHER)/${INSTALLDIR}
	mkdir -p $(DEBIANINVOICEDISPATCHER)/${INSTALLDIR}/bin
	mkdir -p $(DEBIANINVOICEDISPATCHER)/${INSTALLDIR}/var/log
	sed -i s%${BUILDDIR}%${INSTALLDIR}%g ${BUILDDIR}/bin/invoice_dispatcher
	cp -ap $(BUILDDIR)/bin/document_publisher $(DEBIANINVOICEDISPATCHER)/${INSTALLDIR}/bin

install-incomingmail-dispatcher:
	mkdir -p $(DEBIANINCOMINGMAILDISPATCHER)/${INSTALLDIR}
	mkdir -p $(DEBIANINCOMINGMAILDISPATCHER)/${INSTALLDIR}/bin
	mkdir -p $(DEBIANINCOMINGMAILDISPATCHER)/${INSTALLDIR}/var/log
	sed -i s%${BUILDDIR}%${INSTALLDIR}%g ${BUILDDIR}/bin/incomingmail_dispatcher
	cp -ap $(BUILDDIR)/bin/document_publisher $(DEBIANINCOMINGMAILDISPATCHER)/${INSTALLDIR}/bin

install: install-base install-core install-publisher install-invoice-dispatcher install-incomingmail-dispatcher
	#rm -rf $(BUILDDIR)/

binary-common:
	dh_testdir
	dh_testroot

	dh_installchangelogs

	dh_installdocs
	dh_installdebconf
	dh_installinit
	dh_installman
	dh_link
	dh_strip
	dh_fixperms
	dh_shlibdeps --dpkg-shlibdeps-params=--ignore-missing-info
	dh_installdeb
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary-indep: build install
	$(MAKE) -f debian/rules DH_OPTIONS=-i binary-common

binary-arch: install
	$(MAKE) -f debian/rules DH_OPTIONS=-a binary-common

binary: binary-arch

.PHONY: build clean binary install
